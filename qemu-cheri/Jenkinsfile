// https://getintodevops.com/blog/building-your-first-docker-image-with-jenkins-2-guide-for-developers
properties([[$class: 'CopyArtifactPermissionProperty', projectNames: '*']])

node("docker") {
    stage('Clone repository') {
        /* Let's make sure we have the repository cloned to our workspace */
        checkout scm
        sh "pwd"
    }
    stage("Copy artifacts") {
        dir ('qemu-cheri') {
            sh 'rm -rfv qemu-linux'
            copyArtifacts filter: 'qemu-linux/**', projectName: 'qemu/qemu-cheri'
            // Keep only the CHERI binaries
            sh 'rm -vf qemu-linux/bin/qemu-system-{riscv32,riscv64,mips64,x86_64}'
            sh 'chmod -v +x qemu-linux/bin/* && ls -laR'
        }
    }
    dir ('qemu-cheri') {
        def app
        stage("Build image") {
            // sh "env | sort"
            sh "pwd && ls -la"
            app = docker.build("ctsrd/qemu-cheri", "-q .")
            // Test that QEMU works:
            app.inside {
                sh "env | sort"
                sh '''
for i in 128 riscv64cheri;
do
    which qemu-system-cheri$i
    qemu-system-cheri$i --help > /dev/null
done
'''
            }
        }
        stage("Push image") {
            docker.withRegistry('https://registry.hub.docker.com', 'docker-hub-credentials') {
                app.push("${env.BUILD_NUMBER}")
                app.push("latest")
            }
        }
    }

    stage ("Cleaning up") {
        pwd
        sh "rm -rf qemu-cheri/qemu-linux"
        sh "ls -laR qemu-cheri"
    }
}
